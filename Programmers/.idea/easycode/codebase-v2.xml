<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="com.obiscr.chatgpt.settings.EasyCodeState">
    <option name="projectFiles" value="$PROJECT_DIR$/Bandage/Main.java;C:/KAKAOxGOORM/Practice/JAVA_workplace/CodingTests/Programmers/Bandage/Solution.java;C:/KAKAOxGOORM/Practice/JAVA_workplace/CodingTests/Programmers/Cache/Solution.java;C:/KAKAOxGOORM/Practice/JAVA_workplace/CodingTests/Programmers/CollisionRisk/Solution.java;C:/KAKAOxGOORM/Practice/JAVA_workplace/CodingTests/Programmers/FailRate/Main.java;C:/KAKAOxGOORM/Practice/JAVA_workplace/CodingTests/Programmers/FailRate/Solution.java;C:/KAKAOxGOORM/Practice/JAVA_workplace/CodingTests/Programmers/FailRate/Solution_ver1.java;C:/KAKAOxGOORM/Practice/JAVA_workplace/CodingTests/Programmers/Friends4Blocks/Solution.java;C:/KAKAOxGOORM/Practice/JAVA_workplace/CodingTests/Programmers/GroupPhoto/Main.java;C:/KAKAOxGOORM/Practice/JAVA_workplace/CodingTests/Programmers/GroupPhoto/Solution.java;C:/KAKAOxGOORM/Practice/JAVA_workplace/CodingTests/Programmers/KeyPad/Solution.java;C:/KAKAOxGOORM/Practice/JAVA_workplace/CodingTests/Programmers/Mining/Solution.java;C:/KAKAOxGOORM/Practice/JAVA_workplace/CodingTests/Programmers/Mining/Solution2.java;C:/KAKAOxGOORM/Practice/JAVA_workplace/CodingTests/Programmers/NewIdRecommendation/Solution.java;C:/KAKAOxGOORM/Practice/JAVA_workplace/CodingTests/Programmers/NewsClustering/Solution.java;C:/KAKAOxGOORM/Practice/JAVA_workplace/CodingTests/Programmers/PrivateInfo/Main.java;C:/KAKAOxGOORM/Practice/JAVA_workplace/CodingTests/Programmers/PrivateInfo/Solution.java;C:/KAKAOxGOORM/Practice/JAVA_workplace/CodingTests/Programmers/ReportResult/Main.java;C:/KAKAOxGOORM/Practice/JAVA_workplace/CodingTests/Programmers/ReportResult/Solution.java;C:/KAKAOxGOORM/Practice/JAVA_workplace/CodingTests/Programmers/ReportResult2/Solution.java;C:/KAKAOxGOORM/Practice/JAVA_workplace/CodingTests/Programmers/ReportResult3/Main.java;C:/KAKAOxGOORM/Practice/JAVA_workplace/CodingTests/Programmers/ReportResult3/Member.java;C:/KAKAOxGOORM/Practice/JAVA_workplace/CodingTests/Programmers/ReportResult3/MemberManager.java;C:/KAKAOxGOORM/Practice/JAVA_workplace/CodingTests/Programmers/ReportResult3/Solution.java;C:/KAKAOxGOORM/Practice/JAVA_workplace/CodingTests/Programmers/SecretMap/Main.java;C:/KAKAOxGOORM/Practice/JAVA_workplace/CodingTests/Programmers/SecretMap/Solution.java;C:/KAKAOxGOORM/Practice/JAVA_workplace/CodingTests/Programmers/TableEdit/Solution_SM.java;C:/KAKAOxGOORM/Practice/JAVA_workplace/CodingTests/Programmers/TableEdit/Solution_ver1.java;C:/KAKAOxGOORM/Practice/JAVA_workplace/CodingTests/Programmers/TableEdit/Solution_ver2.java" />
    <option name="forceFullIndex" value="false" />
    <option name="fileSummaryMaps" value="{&quot;C:/KAKAOxGOORM/Practice/JAVA_workplace/CodingTests/Programmers&quot;:&quot;{\&quot;/TableEdit/Solution_ver2.java\&quot;:\&quot;This file contains a single class `Solution_ver2` with a `main` function and a `solution` function.\\n\\n`Solution_ver2`: This class provides a solution to a coding problem related to editing a table.\\n\\n`main`: The main function tests the `solution` function with different input parameters and compares the output with the expected result.\\n\\n`solution`: The `solution` function implements the logic to edit a table based on the given commands, and returns the final state of the table as a string.\&quot;,\&quot;/ReportResult3/Main.java\&quot;:\&quot;This file does not contain any classes or functions. It is a main class that serves as the entry point for the program. The program takes in a list of user IDs, a list of user reports, and a threshold value `k`. It then calculates the number of times each user is reported and prints the expected and calculated results.\&quot;,\&quot;/Bandage/Solution.java\&quot;:\&quot;This file contains a single class `Solution` with one function `solution()`.\\n\\n`Solution`: This class contains a solution to a coding problem.\\n\\n`solution()`: This function takes an array of bandage information, the initial health, and a list of attacks, and returns the remaining health after the attacks.\&quot;,\&quot;/PrivateInfo/Solution.java\&quot;:\&quot;This file contains a solution to a coding problem related to managing private information. Here are the classes and functions in the file:\\n\\n`Solution`: This class contains the main solution to the problem, which involves processing a list of privacy data and determining which data has expired.\\n\\n`Privacies`: This class represents a single piece of private information, including its start date, expiration date, and whether it has expired.\\n- `termsData(String[] terms)`: This static method initializes the expiration period for each type of private information.\\n- `getTerm(String C)`: This static method returns the expiration period for a given type of private information.\\n- `Privacies(int infoIndex, int sYear, int sMonth, int sDay, String kind, boolean expired)`: This constructor initializes a new `Privacies` object with the given parameters.\\n- `updateExpire(String today)`: This method updates the expiration status of the `Privacies` object based on the current date.\\n- `isExpired()`: This method returns the expiration status of the `Privacies` object.\\n\\n`DataManager`: This class manages a collection of `Privacies` objects and provides methods for adding, retrieving, and determining which objects have expired.\\n- `addInfo(int idx, Privacies privacy)`: This method adds a new `Privacies` object to the collection.\\n- `findWithIdx(int idx)`: This method retrieves a `Privacies` object from the collection by its index.\\n- `getExpiredIdx()`: This method returns a list of the indices of `Privacies` objects that have expired.\&quot;,\&quot;/SecretMap/Solution.java\&quot;:\&quot;This file contains a single class `Solution` with one function `solution()`.\\n\\n`Solution`: This class contains a solution to the \\\&quot;Secret Map\\\&quot; coding problem.\\n\\n`solution()`: This function takes in two integer arrays `arr1` and `arr2`, representing two secret maps, and returns a string array representing the combined secret map.\&quot;,\&quot;/ReportResult3/Member.java\&quot;:\&quot;`Member`: A class that represents a member in a system, with properties such as ID, reported count, ban status, reporters, and mail count.\\n\\n`Member(String ID)`: A constructor that initializes a new `Member` object with the given ID.\\n\\n`reportedBy(String reporter)`: A method that increments the reported count and adds the reporter to the set of reporters if the reporter has not reported the member before.\\n\\n`getID()`: A getter method that returns the ID of the member.\\n\\n`setID(String iD)`: A setter method that sets the ID of the member.\\n\\n`getReportedCount()`: A getter method that returns the reported count of the member.\\n\\n`setReportedCount(int reportedCount)`: A setter method that sets the reported count of the member.\\n\\n`isBan()`: A getter method that returns the ban status of the member.\\n\\n`setBan(boolean ban)`: A setter method that sets the ban status of the member.\\n\\n`getReporters()`: A getter method that returns the set of reporters for the member.\\n\\n`addReporters(String reporter)`: A method that adds a new reporter to the set of reporters for the member.\\n\\n`recieveMail()`: A method that increments the mail count of the member.\\n\\n`getMail()`: A getter method that returns the mail count of the member.\&quot;,\&quot;/ReportResult/Main.java\&quot;:\&quot;This file does not contain any classes or functions. It is a main class that serves as the entry point for the program. The program takes in a list of user IDs, a list of user reports, and a threshold value `k`. It then calculates the number of times each user is reported and prints the expected and calculated results.\&quot;,\&quot;/CollisionRisk/Solution.java\&quot;:\&quot;This file contains a solution to a coding problem related to collision risk. It has the following classes and functions:\\n\\n`Solution`: This class contains the main logic to solve the collision risk problem.\\n\\n`solution(int[][] points, int[][] routes)`: This function takes in the coordinates of points and routes, and calculates the number of collision risks.\\n\\n`collisionCheck(ArrayList\\u003cRobot\\u003e robots)`: This function checks for collision risks among the current positions of the robots.\\n\\n`Robot`: This class represents a robot and its movement, including its current position, target position, and whether it has reached its final destination.\\n\\n`setNextTarget()`: This function sets the next target position for the robot.\\n\\n`setTargets(int[][] points, int[] route)`: This function sets the target positions for the robot based on the given points and route.\\n\\n`moveOnce()`: This function moves the robot one step towards its current target position.\\n\\nThe file also includes a `main()` function that tests the `solution()` function with various input cases.\&quot;,\&quot;/SecretMap/Main.java\&quot;:\&quot;This file does not contain any classes or functions. It is a main class that serves as a test driver for the `Solution` class, which is not provided in the given code. The main class sets up two test cases, calls the `solution` method of the `Solution` class, and compares the expected output with the calculated output.\&quot;,\&quot;/Bandage/Main.java\&quot;:\&quot;This file does not contain any classes or functions. It is a main class that serves as a test driver for the `Solution` class, which is not provided in the given code. The main class contains several commented-out test cases that demonstrate the usage of the `Solution.solution()` method, which appears to be the main functionality of the program.\&quot;,\&quot;/ReportResult2/Solution.java\&quot;:\&quot;This file contains a single class `Solution` with one static method `solution()`. The `solution()` method takes an array of user IDs, an array of user report strings, and a threshold `k`, and returns an array of the number of times each user was reported.\\n\\n`Solution`: This class contains the logic to process the user reports and calculate the number of times each user was reported.\\n\\n`solution()`: This method processes the user reports, filters out duplicate reports, and counts the number of times each user was reported, returning an array of the counts.\&quot;,\&quot;/FailRate/Main.java\&quot;:\&quot;This file does not contain any classes or functions. It appears to be a Java file that is part of a coding test study for the \\\&quot;Fail Rate\\\&quot; problem. The file includes commented-out code that sets up some test cases for the problem, but does not contain any implementation details.\&quot;,\&quot;/Cache/Solution.java\&quot;:\&quot;This file contains a single class `Solution` that implements a cache-based algorithm to solve a coding problem.\\n\\n`Solution`: A class that implements a cache-based algorithm to solve a coding problem.\\n\\n`solution`: A function that takes a cache size and an array of city names, and returns the total time required to process the cities using a cache-based algorithm.\&quot;,\&quot;/GroupPhoto/Main.java\&quot;:\&quot;This file does not contain any classes or functions. It is a `Main` class that serves as the entry point for the program. The program takes an integer `n` and a string array `data` as input, and calls the `solution` function from the `Solution` class to calculate an expected output. The program then compares the calculated output with the expected output and prints the result.\&quot;,\&quot;/PrivateInfo/Main.java\&quot;:\&quot;This file does not contain any classes or functions. It is a main class that demonstrates the usage of the `Solution` class, which is not provided in the given code. The main class sets up test cases with different input values for the `today`, `terms`, and `privacies` parameters, and then calls the `Solution.solution()` method to get the calculated results, which are then compared to the expected results.\&quot;,\&quot;/NewIdRecommendation/Solution.java\&quot;:\&quot;This file contains a single class `Solution` that implements a function `solution` to solve the \\\&quot;New ID Recommendation\\\&quot; coding problem.\\n\\n`Solution`: This class contains the main logic to process a given ID and recommend a new ID based on the given requirements.\\n\\n`solution`: This function takes a new ID as input and applies a series of transformations to it to generate a recommended ID that meets the given requirements.\\n\\nThe file also contains a `main` function that prompts the user to enter an ID, calls the `solution` function to get the recommended ID, and prints the result.\&quot;,\&quot;/ReportResult/Solution.java\&quot;:\&quot;This file contains a single class `Solution` with one function `solution()`.\\n\\n`Solution`: This class contains a solution to a coding problem related to reporting and banning users based on a list of reported users.\\n\\n`solution()`: This function takes in a list of user IDs, a list of reported user pairs, and a threshold for the number of reports required to ban a user, and returns an array of the number of times each user was reported.\&quot;,\&quot;/TableEdit/Solution_ver1.java\&quot;:\&quot;This file contains a solution to a coding problem related to table editing. It has the following classes and functions:\\n\\n`Solution_ver1`: This class contains the main method and the `solution` function that implements the table editing logic.\\n\\n`DataManager`: This class manages the data related to the table, including the row data and the deleted row indices.\\n\\n`RowData`: This class represents a single row in the table, with a name and a flag to indicate if the row is deleted.\\n\\nThe `solution` function takes in the size of the table, the initial cursor position, and a list of commands, and returns a string representing the final state of the table.\&quot;,\&quot;/GroupPhoto/Solution.java\&quot;:\&quot;This file contains a single class `Solution` that solves the problem of finding the number of possible arrangements of 8 friends that satisfy a set of given conditions.\\n\\n`Solution`: This class contains the logic to generate all possible permutations of the 8 friends and check if they satisfy the given conditions.\\n\\n`solution(int n, String[] data)`: This function takes the number of conditions `n` and an array of conditions `data` as input, and returns the number of valid arrangements of the 8 friends.\\n\\n`perm(int idx)`: This function generates all possible permutations of the 8 friends using a depth-first search approach.\\n\\n`checkCondition(HashMap\\u003cString, Integer\\u003e friendArray, String data)`: This function checks if a given arrangement of the 8 friends satisfies a single condition.\&quot;,\&quot;/KeyPad/Solution.java\&quot;:\&quot;This file contains a single class `Solution` with the following functions:\\n\\n`getDistance`: Calculates the distance between two numbers on a keypad.\\n`solution`: Determines which hand to use for each number in a given array of numbers, based on the given hand preference, and returns a string representing the sequence of hand movements.\\n`main`: Provides a test case for the `solution` function.\\n\\nThe file implements a solution to a coding problem related to using a phone keypad, where the goal is to determine the sequence of hand movements required to enter a given set of numbers, based on a preference for using the left or right hand.\&quot;,\&quot;/Mining/Solution2.java\&quot;:\&quot;This file contains the implementation of a solution to a coding problem related to mining minerals.\\n\\n`Solution2`: This class contains the main logic for solving the problem.\\n\\n`solution(int[], String[])`: This function takes in an array of picks and an array of minerals, and returns the minimum total fatigue required to mine all the minerals.\\n\\n`Mine`: This class represents a group of 5 minerals, and keeps track of the number of diamonds, iron, and stones, as well as the total fatigue required to mine them.\&quot;,\&quot;/TableEdit/Solution_SM.java\&quot;:\&quot;This file contains a single class `Solution_SM` that provides a solution to a coding problem.\\n\\n`Solution_SM`: This class provides a solution to the problem of editing a table, where rows can be deleted and restored.\\n\\n`solution`: This function takes in the size of the table, the initial row index, and a list of commands, and returns a string representing the state of the table after executing the commands.\&quot;,\&quot;/SandBox/SandBox.java\&quot;:\&quot;This file does not contain any classes. It is a Java program that demonstrates the usage of the `ArrayDeque` class from the Java Collections Framework.\\n\\n`main()`: This function demonstrates various operations on an `ArrayDeque` object, such as adding elements to the front and back, removing elements from the front and back, and printing the contents of the deque.\\n\\nThe program creates an `ArrayDeque` object, adds elements to it using different methods (`add()`, `addFirst()`, `addLast()`, `push()`), and then removes elements from it using different methods (`pop()`, `poll()`, `pollLast()`). The output of the program is printed to the console, showing the contents of the deque after each operation.\&quot;,\&quot;/Friends4Blocks/Solution.java\&quot;:\&quot;This file contains a single `Solution` class with the following functions:\\n\\n`main`: The main function that tests the `solution` function with different input parameters and compares the expected and calculated results.\\n\\n`solution`: The main function that solves the problem of removing blocks of the same character from a 2D grid and returns the total number of blocks removed.\\n\\n`toStringBuilder`: A helper function that converts a 2D array of strings into an array of `StringBuilder` objects.\\n\\n`popBlocks`: A function that identifies and removes blocks of the same character from the 2D grid, updating the total number of blocks removed.\\n\\n`downLines`: A function that moves the remaining blocks downwards in the 2D grid after blocks have been removed.\\n\\nThe file implements a solution to the \\\&quot;Friends4Blocks\\\&quot; coding problem, where the goal is to remove blocks of the same character from a 2D grid and return the total number of blocks removed.\&quot;,\&quot;/ReportResult3/MemberManager.java\&quot;:\&quot;`MemberManager`: A class that manages a collection of `Member` objects, providing methods to add, retrieve, and access the members.\\n\\n`addMember`: A method that adds a new `Member` object to the `MemberManager`.\\n`memberByID`: A method that retrieves a `Member` object from the `MemberManager` based on the provided ID.\\n`getMembers`: A method that returns the entire collection of `Member` objects managed by the `MemberManager`.\&quot;,\&quot;/FailRate/Solution_ver1.java\&quot;:\&quot;This file contains a single class `Solution_ver1` and three functions:\\n\\n`Solution_ver1`: This class provides a solution to the \\\&quot;Fail Rate\\\&quot; coding problem.\\n\\n`solution`: This function calculates the fail rate for each stage and returns an array of stage numbers sorted in descending order of their fail rates.\\n\\n`failRate`: This function calculates the fail rate for a given stage by dividing the number of players stuck on that stage by the total number of players at or above that stage.\\n\\n`insertNumIntoList`: This function inserts a stage number into a sorted list of stage numbers based on their fail rates.\&quot;,\&quot;/NewsClustering/Solution.java\&quot;:\&quot;This file contains a single class `Solution` with the following functions:\\n\\n`main`: The main function that tests the `solution` function with various input strings and compares the expected and calculated output.\\n\\n`solution`: The main function that implements the Jaccard similarity algorithm to calculate the similarity between two input strings.\\n\\n`makeMap`: A helper function that creates a HashMap from a given input string, where the keys are the 2-character substrings and the values are the counts of those substrings.\\n\\n`getSimilarity`: A helper function that calculates the Jaccard similarity between two HashMaps representing the 2-character substrings of the input strings.\\n\\nThe purpose of this file is to implement a solution to the \\\&quot;News Clustering\\\&quot; coding problem, which involves calculating the Jaccard similarity between two input strings and returning the result as an integer value.\&quot;,\&quot;/ReportResult3/Solution.java\&quot;:\&quot;This file contains a single class `Solution` that implements a function `solution` to solve a coding problem related to reporting and banning users based on a given set of report data.\\n\\n`Solution`: The `Solution` class contains the main logic for processing the report data and determining which users should be banned.\\n\\n`solution`: The `solution` function takes in an array of user IDs, an array of report data, and a threshold value `k`, and returns an array of the number of warning emails received by each user.\&quot;,\&quot;/Mining/Solution.java\&quot;:\&quot;This file contains a solution to a coding problem related to mining minerals. It does not contain any classes, but it has the following functions:\\n\\n`main`: This function is the entry point of the program, which tests the two solution methods and compares their results.\\n\\n`solution2`: This function implements a more efficient solution to the problem by grouping the minerals into sets of 5 and prioritizing the use of diamond pickaxes.\\n\\n`solution`: This function implements a depth-first search (DFS) approach to solve the problem, exploring all possible combinations of pickaxe usage and calculating the minimum fatigue.\\n\\n`DFSearch`: This function performs the depth-first search to explore all possible combinations of pickaxe usage and updates the minimum fatigue.\\n\\n`getTired`: This function calculates the fatigue for a given set of minerals and a specific type of pickaxe.\\n\\nThe file also includes some comments that provide insights into the problem and the thought process behind the solutions.\&quot;,\&quot;/FailRate/Solution.java\&quot;:\&quot;This file contains a single class `Solution` and several functions within it. The file appears to be a solution to a coding problem related to calculating the failure rate of different stages in a game and sorting the stages based on their failure rates.\\n\\n`Solution`: The main class that contains the solution to the coding problem.\\n\\n`main(String[] args)`: The main function that sets up the input data and calls the `solution()` function.\\n\\n`solution(int N, int[] stages)`: The main function that calculates the failure rate for each stage and returns an array of stage numbers sorted by their failure rates.\\n\\n`getFailRate(int n, int[] stages)`: A helper function that calculates the failure rate for a given stage `n` based on the provided `stages` array.\\n\\n`insertNumIntoList(int num, HashMap\\u003cInteger, Double\\u003e failRate, ArrayList\\u003cInteger\\u003e sortedNum, int s, int e)`: A recursive helper function that inserts a stage number into the `sortedNum` list while maintaining the sorted order based on the failure rates.\&quot;}&quot;}" />
    <option name="fileSkeletonMaps" value="{&quot;C:/KAKAOxGOORM/Practice/JAVA_workplace/CodingTests/Programmers&quot;:&quot;{\&quot;/Bandage/Main.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Bandage/Main.java\&quot;,\&quot;file_name\&quot;:\&quot;Main.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[4,1],[45,2]]}]},\&quot;/Bandage/Solution.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Bandage/Solution.java\&quot;,\&quot;file_name\&quot;:\&quot;Solution.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;solution\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] bandage, int health, int[][] attacks)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;bandage\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;health\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;attacks\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[4,4],[50,5]]}]},\&quot;/Cache/Solution.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Cache/Solution.java\&quot;,\&quot;file_name\&quot;:\&quot;Solution.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;solution\&quot;,\&quot;method_parameters\&quot;:\&quot;(int cacheSize, String[] cities)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;cacheSize\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;cities\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[5,4],[27,5]]}]},\&quot;/CollisionRisk/Solution.java\&quot;:{\&quot;file_path\&quot;:\&quot;/CollisionRisk/Solution.java\&quot;,\&quot;file_name\&quot;:\&quot;Solution.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[105,5]]},{\&quot;method_name\&quot;:\&quot;solution\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[][] points, int[][] routes)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;points\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;routes\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[107,4],[147,5]]},{\&quot;method_name\&quot;:\&quot;collisionCheck\&quot;,\&quot;method_parameters\&quot;:\&quot;(ArrayList\\u003cRobot\\u003e robots)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;robots\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[149,4],[170,5]]},{\&quot;method_name\&quot;:\&quot;Robot\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[185,8],[194,9]]},{\&quot;method_name\&quot;:\&quot;setNextTarget\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[195,8],[203,9]]},{\&quot;method_name\&quot;:\&quot;setTargets\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[][] points, int[] route)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;points\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;route\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[204,8],[209,9]]},{\&quot;method_name\&quot;:\&quot;getR\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[210,8],[212,9]]},{\&quot;method_name\&quot;:\&quot;getC\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[213,8],[215,9]]},{\&quot;method_name\&quot;:\&quot;moveOnce\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[217,8],[233,9]]}]},\&quot;/FailRate/Main.java\&quot;:{\&quot;file_path\&quot;:\&quot;/FailRate/Main.java\&quot;,\&quot;file_name\&quot;:\&quot;Main.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/FailRate/Solution.java\&quot;:{\&quot;file_path\&quot;:\&quot;/FailRate/Solution.java\&quot;,\&quot;file_name\&quot;:\&quot;Solution.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,1],[20,3]]},{\&quot;method_name\&quot;:\&quot;solution\&quot;,\&quot;method_parameters\&quot;:\&quot;(int N, int[] stages)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;N\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;stages\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[23,4],[53,5]]},{\&quot;method_name\&quot;:\&quot;getFailRate\&quot;,\&quot;method_parameters\&quot;:\&quot;(int n, int[] stages)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;stages\&quot;}],\&quot;return_type\&quot;:\&quot;double\&quot;,\&quot;scope\&quot;:[[55,4],[62,5]]},{\&quot;method_name\&quot;:\&quot;insertNumIntoList\&quot;,\&quot;method_parameters\&quot;:\&quot;(int num, HashMap\\u003cInteger, Double\\u003e failRate, ArrayList\\u003cInteger\\u003e sortedNum, int s, int e)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;num\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;failRate\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;sortedNum\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;s\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;e\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[63,4],[109,5]]}]},\&quot;/FailRate/Solution_ver1.java\&quot;:{\&quot;file_path\&quot;:\&quot;/FailRate/Solution_ver1.java\&quot;,\&quot;file_name\&quot;:\&quot;Solution_ver1.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;solution\&quot;,\&quot;method_parameters\&quot;:\&quot;(int N, int[] stages)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;N\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;stages\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[8,4],[34,5]]},{\&quot;method_name\&quot;:\&quot;failRate\&quot;,\&quot;method_parameters\&quot;:\&quot;(int n, int[] stages)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;stages\&quot;}],\&quot;return_type\&quot;:\&quot;double\&quot;,\&quot;scope\&quot;:[[36,4],[43,5]]},{\&quot;method_name\&quot;:\&quot;insertNumIntoList\&quot;,\&quot;method_parameters\&quot;:\&quot;(int num, HashMap\\u003cInteger, Double\\u003e fail_Rate, ArrayList\\u003cInteger\\u003e sortedNum)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;num\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;fail_Rate\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;sortedNum\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[44,4],[66,5]]}]},\&quot;/Friends4Blocks/Solution.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Friends4Blocks/Solution.java\&quot;,\&quot;file_name\&quot;:\&quot;Solution.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[26,5]]},{\&quot;method_name\&quot;:\&quot;solution\&quot;,\&quot;method_parameters\&quot;:\&quot;(int m, int n, String[] board)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;m\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;board\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[27,4],[32,5]]},{\&quot;method_name\&quot;:\&quot;toStringBuilder\&quot;,\&quot;method_parameters\&quot;:\&quot;(int m, String[] board)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;m\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;board\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[35,4],[42,5]]},{\&quot;method_name\&quot;:\&quot;popBlocks\&quot;,\&quot;method_parameters\&quot;:\&quot;(int m, int n, StringBuilder[] boardSb, int[] ans)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;m\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;boardSb\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;ans\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[44,4],[82,5]]},{\&quot;method_name\&quot;:\&quot;downLines\&quot;,\&quot;method_parameters\&quot;:\&quot;(int m, int n, StringBuilder[] boardSb)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;m\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;boardSb\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[83,4],[95,5]]}]},\&quot;/GroupPhoto/Main.java\&quot;:{\&quot;file_path\&quot;:\&quot;/GroupPhoto/Main.java\&quot;,\&quot;file_name\&quot;:\&quot;Main.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,1],[40,2]]}]},\&quot;/GroupPhoto/Solution.java\&quot;:{\&quot;file_path\&quot;:\&quot;/GroupPhoto/Solution.java\&quot;,\&quot;file_name\&quot;:\&quot;Solution.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;solution\&quot;,\&quot;method_parameters\&quot;:\&quot;(int n, String[] data)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;data\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[21,1],[29,5]]},{\&quot;method_name\&quot;:\&quot;perm\&quot;,\&quot;method_parameters\&quot;:\&quot;(int idx)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;idx\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[32,1],[53,2]]},{\&quot;method_name\&quot;:\&quot;checkCondition\&quot;,\&quot;method_parameters\&quot;:\&quot;(HashMap\\u003cString, Integer\\u003e friendArray, String data)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;friendArray\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;data\&quot;}],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[57,1],[76,2]]}]},\&quot;/KeyPad/Solution.java\&quot;:{\&quot;file_path\&quot;:\&quot;/KeyPad/Solution.java\&quot;,\&quot;file_name\&quot;:\&quot;Solution.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;getDistance\&quot;,\&quot;method_parameters\&quot;:\&quot;(int num1, int num2)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;num1\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;num2\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[3,1],[26,2]]},{\&quot;method_name\&quot;:\&quot;solution\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] numbers, String hand)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;numbers\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;hand\&quot;}],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[28,4],[77,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[78,4],[88,2]]}]},\&quot;/Mining/Solution.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Mining/Solution.java\&quot;,\&quot;file_name\&quot;:\&quot;Solution.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[19,4],[72,5]]},{\&quot;method_name\&quot;:\&quot;solution2\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] picks, String[] minerals)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;picks\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;minerals\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[74,4],[149,5]]},{\&quot;method_name\&quot;:\&quot;solution\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] picks, String[] minerals)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;picks\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;minerals\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[151,4],[187,5]]},{\&quot;method_name\&quot;:\&quot;DFSearch\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] picks, ArrayList\\u003cArrayList\\u003cString\\u003e\\u003e mineralSets, int lumps, int tired, int[] tired_min)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;picks\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;mineralSets\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;lumps\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;tired\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;tired_min\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[189,4],[209,5]]},{\&quot;method_name\&quot;:\&quot;getTired\&quot;,\&quot;method_parameters\&quot;:\&quot;(ArrayList\\u003cString\\u003e mineralSet, int Axe)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;mineralSet\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;Axe\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[210,4],[225,5]]}]},\&quot;/Mining/Solution2.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Mining/Solution2.java\&quot;,\&quot;file_name\&quot;:\&quot;Solution2.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[14,5]]},{\&quot;method_name\&quot;:\&quot;solution\&quot;,\&quot;method_parameters\&quot;:\&quot;(int[] picks, String[] minerals)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;picks\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;minerals\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[16,4],[91,5]]},{\&quot;method_name\&quot;:\&quot;compareTo\&quot;,\&quot;method_parameters\&quot;:\&quot;(Mine mine)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Mine\&quot;,\&quot;name\&quot;:\&quot;mine\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[102,4],[105,5]]}]},\&quot;/NewIdRecommendation/Solution.java\&quot;:{\&quot;file_path\&quot;:\&quot;/NewIdRecommendation/Solution.java\&quot;,\&quot;file_name\&quot;:\&quot;Solution.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,1],[22,2]]},{\&quot;method_name\&quot;:\&quot;solution\&quot;,\&quot;method_parameters\&quot;:\&quot;(String new_id)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;new_id\&quot;}],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[24,1],[100,5]]}]},\&quot;/NewsClustering/Solution.java\&quot;:{\&quot;file_path\&quot;:\&quot;/NewsClustering/Solution.java\&quot;,\&quot;file_name\&quot;:\&quot;Solution.java\&quot;,\&quot;methods\&quot;:[]},\&quot;/PrivateInfo/Main.java\&quot;:{\&quot;file_path\&quot;:\&quot;/PrivateInfo/Main.java\&quot;,\&quot;file_name\&quot;:\&quot;Main.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[4,1],[34,2]]}]},\&quot;/PrivateInfo/Solution.java\&quot;:{\&quot;file_path\&quot;:\&quot;/PrivateInfo/Solution.java\&quot;,\&quot;file_name\&quot;:\&quot;Solution.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;solution\&quot;,\&quot;method_parameters\&quot;:\&quot;(String today, String[] terms, String[] privacies)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;today\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;terms\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;privacies\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[6,4],[31,5]]},{\&quot;method_name\&quot;:\&quot;termsData\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] terms)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;terms\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[43,5],[48,6]]},{\&quot;method_name\&quot;:\&quot;getTerm\&quot;,\&quot;method_parameters\&quot;:\&quot;(String C)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;C\&quot;}],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[50,5],[52,6]]},{\&quot;method_name\&quot;:\&quot;Privacies\&quot;,\&quot;method_parameters\&quot;:\&quot;(int infoIndex, int sYear, int sMonth, int sDay, String kind, boolean expired)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;infoIndex\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;sYear\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;sMonth\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;sDay\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;kind\&quot;},{\&quot;type\&quot;:\&quot;boolean\&quot;,\&quot;name\&quot;:\&quot;expired\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[56,5],[71,3]]},{\&quot;method_name\&quot;:\&quot;updateExpire\&quot;,\&quot;method_parameters\&quot;:\&quot;(String today)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;today\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[73,2],[86,6]]},{\&quot;method_name\&quot;:\&quot;isExpired\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[88,2],[90,3]]},{\&quot;method_name\&quot;:\&quot;DataManager\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[96,5],[98,6]]},{\&quot;method_name\&quot;:\&quot;addInfo\&quot;,\&quot;method_parameters\&quot;:\&quot;(int idx, Privacies privacy)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;idx\&quot;},{\&quot;type\&quot;:\&quot;Privacies\&quot;,\&quot;name\&quot;:\&quot;privacy\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[99,5],[101,6]]},{\&quot;method_name\&quot;:\&quot;findWithIdx\&quot;,\&quot;method_parameters\&quot;:\&quot;(int idx)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;idx\&quot;}],\&quot;return_type\&quot;:\&quot;Privacies\&quot;,\&quot;scope\&quot;:[[103,5],[105,6]]},{\&quot;method_name\&quot;:\&quot;getExpiredIdx\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[106,5],[115,6]]}]},\&quot;/ReportResult/Main.java\&quot;:{\&quot;file_path\&quot;:\&quot;/ReportResult/Main.java\&quot;,\&quot;file_name\&quot;:\&quot;Main.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[4,1],[20,2]]}]},\&quot;/ReportResult/Solution.java\&quot;:{\&quot;file_path\&quot;:\&quot;/ReportResult/Solution.java\&quot;,\&quot;file_name\&quot;:\&quot;Solution.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;solution\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] id_list, String[] report, int k)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;id_list\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;report\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;k\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[10,4],[54,5]]}]},\&quot;/ReportResult2/Solution.java\&quot;:{\&quot;file_path\&quot;:\&quot;/ReportResult2/Solution.java\&quot;,\&quot;file_name\&quot;:\&quot;Solution.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;solution\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] id_list, String[] report, int k)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;id_list\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;report\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;k\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[7,4],[61,5]]},{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[63,4],[76,2]]}]},\&quot;/ReportResult3/Main.java\&quot;:{\&quot;file_path\&quot;:\&quot;/ReportResult3/Main.java\&quot;,\&quot;file_name\&quot;:\&quot;Main.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[4,1],[20,2]]}]},\&quot;/ReportResult3/Member.java\&quot;:{\&quot;file_path\&quot;:\&quot;/ReportResult3/Member.java\&quot;,\&quot;file_name\&quot;:\&quot;Member.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;Member\&quot;,\&quot;method_parameters\&quot;:\&quot;(String ID)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;ID\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[12,1],[18,2]]},{\&quot;method_name\&quot;:\&quot;reportedBy\&quot;,\&quot;method_parameters\&quot;:\&quot;(String reporter)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;reporter\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[19,1],[24,2]]},{\&quot;method_name\&quot;:\&quot;getID\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[25,1],[27,2]]},{\&quot;method_name\&quot;:\&quot;setID\&quot;,\&quot;method_parameters\&quot;:\&quot;(String iD)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;iD\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[28,1],[30,2]]},{\&quot;method_name\&quot;:\&quot;getReportedCount\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[31,1],[33,2]]},{\&quot;method_name\&quot;:\&quot;setReportedCount\&quot;,\&quot;method_parameters\&quot;:\&quot;(int reportedCount)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;reportedCount\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[34,1],[36,2]]},{\&quot;method_name\&quot;:\&quot;isBan\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[37,1],[39,2]]},{\&quot;method_name\&quot;:\&quot;setBan\&quot;,\&quot;method_parameters\&quot;:\&quot;(boolean ban)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;boolean\&quot;,\&quot;name\&quot;:\&quot;ban\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[40,1],[42,2]]},{\&quot;method_name\&quot;:\&quot;getReporters\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[43,1],[45,2]]},{\&quot;method_name\&quot;:\&quot;addReporters\&quot;,\&quot;method_parameters\&quot;:\&quot;(String reporter)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;reporter\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[46,1],[48,2]]},{\&quot;method_name\&quot;:\&quot;recieveMail\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[49,1],[51,2]]},{\&quot;method_name\&quot;:\&quot;getMail\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[52,1],[54,2]]}]},\&quot;/ReportResult3/MemberManager.java\&quot;:{\&quot;file_path\&quot;:\&quot;/ReportResult3/MemberManager.java\&quot;,\&quot;file_name\&quot;:\&quot;MemberManager.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;MemberManager\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[7,1],[9,2]]},{\&quot;method_name\&quot;:\&quot;addMember\&quot;,\&quot;method_parameters\&quot;:\&quot;(Member member)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Member\&quot;,\&quot;name\&quot;:\&quot;member\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[11,1],[13,2]]},{\&quot;method_name\&quot;:\&quot;memberByID\&quot;,\&quot;method_parameters\&quot;:\&quot;(String ID)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;ID\&quot;}],\&quot;return_type\&quot;:\&quot;Member\&quot;,\&quot;scope\&quot;:[[15,1],[17,2]]},{\&quot;method_name\&quot;:\&quot;getMembers\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[18,1],[20,2]]}]},\&quot;/ReportResult3/Solution.java\&quot;:{\&quot;file_path\&quot;:\&quot;/ReportResult3/Solution.java\&quot;,\&quot;file_name\&quot;:\&quot;Solution.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;solution\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] id_list, String[] report, int k)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;id_list\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;report\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;k\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[3,4],[32,5]]}]},\&quot;/SandBox/SandBox.java\&quot;:{\&quot;file_path\&quot;:\&quot;/SandBox/SandBox.java\&quot;,\&quot;file_name\&quot;:\&quot;SandBox.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[26,5]]}]},\&quot;/SecretMap/Main.java\&quot;:{\&quot;file_path\&quot;:\&quot;/SecretMap/Main.java\&quot;,\&quot;file_name\&quot;:\&quot;Main.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[4,1],[28,2]]}]},\&quot;/SecretMap/Solution.java\&quot;:{\&quot;file_path\&quot;:\&quot;/SecretMap/Solution.java\&quot;,\&quot;file_name\&quot;:\&quot;Solution.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;solution\&quot;,\&quot;method_parameters\&quot;:\&quot;(int n, int[] arr1, int[] arr2)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr1\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;arr2\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[3,1],[34,5]]}]},\&quot;/TableEdit/Solution_SM.java\&quot;:{\&quot;file_path\&quot;:\&quot;/TableEdit/Solution_SM.java\&quot;,\&quot;file_name\&quot;:\&quot;Solution_SM.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;solution\&quot;,\&quot;method_parameters\&quot;:\&quot;(int n, int k, String[] cmd)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;k\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;cmd\&quot;}],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[7,4],[51,5]]}]},\&quot;/TableEdit/Solution_ver1.java\&quot;:{\&quot;file_path\&quot;:\&quot;/TableEdit/Solution_ver1.java\&quot;,\&quot;file_name\&quot;:\&quot;Solution_ver1.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[28,5]]},{\&quot;method_name\&quot;:\&quot;solution\&quot;,\&quot;method_parameters\&quot;:\&quot;(int n, int k, String[] cmd)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;k\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;cmd\&quot;}],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[30,4],[50,5]]},{\&quot;method_name\&quot;:\&quot;DataManager\&quot;,\&quot;method_parameters\&quot;:\&quot;(int n, int k)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;k\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[61,8],[72,9]]},{\&quot;method_name\&quot;:\&quot;findByName\&quot;,\&quot;method_parameters\&quot;:\&quot;(int name)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;name\&quot;}],\&quot;return_type\&quot;:\&quot;RowData\&quot;,\&quot;scope\&quot;:[[74,8],[76,9]]},{\&quot;method_name\&quot;:\&quot;inputCommand\&quot;,\&quot;method_parameters\&quot;:\&quot;(String command)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;command\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[78,8],[91,9]]},{\&quot;method_name\&quot;:\&quot;Up\&quot;,\&quot;method_parameters\&quot;:\&quot;(int X)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;X\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[92,8],[96,9]]},{\&quot;method_name\&quot;:\&quot;Down\&quot;,\&quot;method_parameters\&quot;:\&quot;(int X)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;X\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[97,8],[101,9]]},{\&quot;method_name\&quot;:\&quot;Del\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[102,8],[114,9]]},{\&quot;method_name\&quot;:\&quot;Undo\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[115,8],[118,9]]},{\&quot;method_name\&quot;:\&quot;RowData\&quot;,\&quot;method_parameters\&quot;:\&quot;(int name, int rowNum)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;name\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;rowNum\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[128,8],[131,9]]},{\&quot;method_name\&quot;:\&quot;getName\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[133,8],[135,9]]},{\&quot;method_name\&quot;:\&quot;isDelete\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[137,8],[139,9]]},{\&quot;method_name\&quot;:\&quot;setDelete\&quot;,\&quot;method_parameters\&quot;:\&quot;(boolean delete)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;boolean\&quot;,\&quot;name\&quot;:\&quot;delete\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[141,8],[143,9]]}]},\&quot;/TableEdit/Solution_ver2.java\&quot;:{\&quot;file_path\&quot;:\&quot;/TableEdit/Solution_ver2.java\&quot;,\&quot;file_name\&quot;:\&quot;Solution_ver2.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[28,5]]},{\&quot;method_name\&quot;:\&quot;solution\&quot;,\&quot;method_parameters\&quot;:\&quot;(int n, int k, String[] cmd)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;n\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;k\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;cmd\&quot;}],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[30,4],[81,5]]}]}}&quot;}" />
  </component>
</project>